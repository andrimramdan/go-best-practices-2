// This file was generated by counterfeiter
package apifakes

import (
	"sync"
	"time"

	"github.com/tjarratt/go-best-practices/api"
	"github.com/tjarratt/go-best-practices/domain"
)

type FakePizzaDeliveryEstimator struct {
	EstimatedDeliveryTimeStub        func(domain.Pizza) time.Time
	estimatedDeliveryTimeMutex       sync.RWMutex
	estimatedDeliveryTimeArgsForCall []struct {
		arg1 domain.Pizza
	}
	estimatedDeliveryTimeReturns struct {
		result1 time.Time
	}
}

func (fake *FakePizzaDeliveryEstimator) EstimatedDeliveryTime(arg1 domain.Pizza) time.Time {
	fake.estimatedDeliveryTimeMutex.Lock()
	fake.estimatedDeliveryTimeArgsForCall = append(fake.estimatedDeliveryTimeArgsForCall, struct {
		arg1 domain.Pizza
	}{arg1})
	fake.estimatedDeliveryTimeMutex.Unlock()
	if fake.EstimatedDeliveryTimeStub != nil {
		return fake.EstimatedDeliveryTimeStub(arg1)
	} else {
		return fake.estimatedDeliveryTimeReturns.result1
	}
}

func (fake *FakePizzaDeliveryEstimator) EstimatedDeliveryTimeCallCount() int {
	fake.estimatedDeliveryTimeMutex.RLock()
	defer fake.estimatedDeliveryTimeMutex.RUnlock()
	return len(fake.estimatedDeliveryTimeArgsForCall)
}

func (fake *FakePizzaDeliveryEstimator) EstimatedDeliveryTimeArgsForCall(i int) domain.Pizza {
	fake.estimatedDeliveryTimeMutex.RLock()
	defer fake.estimatedDeliveryTimeMutex.RUnlock()
	return fake.estimatedDeliveryTimeArgsForCall[i].arg1
}

func (fake *FakePizzaDeliveryEstimator) EstimatedDeliveryTimeReturns(result1 time.Time) {
	fake.EstimatedDeliveryTimeStub = nil
	fake.estimatedDeliveryTimeReturns = struct {
		result1 time.Time
	}{result1}
}

var _ api.PizzaDeliveryEstimator = new(FakePizzaDeliveryEstimator)
